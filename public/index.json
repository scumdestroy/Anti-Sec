
    
    
    
    
    
    [{"author":"Jann Moon","categories":null,"contents":"Hi there üëã\nI break stuff so people that build stuff can build better stuff that breaks less.\nTo contact me or learn more about me, check out the links below. Thanks for reading!\nScumdestroy at Github\r@Kurogai\u0026amp;rsquo;s 100 Red Team Projects Challenge, around 75% done\r[Web and API Hacking, Burp Suite Notes and Methodology]{https://github.com/scumdestroy/Infosec-Corruption}\nArticles at Medium\rOpen Source Contributions Hackingthe.cloud - Pentesting Cloud Platforms Knowledge Base\rTomnomnom\u0026amp;rsquo;s GF Tool\rBug Bounty I am a member of a couple invite-only bug bounty platforms","date":"2022-10-10T00:00:00Z","permalink":"http://anti-sec.vercel.app/page/about/","tags":null,"title":"About Me"},{"author":"Jann Moon","categories":null,"contents":"This is a write-up for a recently released room called ‚ÄúBounty Hunter‚Äù created by Sevuhl on excellent CTF platform, TryHackMe. This room contains basic FTP enumeration, using Hydra with SSH and abuse of sudo for privilege escalation on an Ubuntu, Linux OS. I thought it was going to a bug bounty related room based on the name, but I guess it is Cowboy Bebop themed, though I am really clueless on that.","date":"2022-07-15T00:00:00Z","permalink":"http://anti-sec.vercel.app/blog/bounty-hunter-thm-writeup/","tags":["tryhackme","writeups","ctf"],"title":"Bounty Hunter Write-up (TryHackMe)"},{"author":"Jann Moon","categories":null,"contents":"For penetration testers and attackers, dealing with WAFs can be an often frustrating experience. However, creativity and perserverence will be your greatest assets in the often-tedious tasks of enumerating the firewall\u0026rsquo;s rules and settings through deductive reasoning. This is almost always a black-box set of trials, akin to a game of \u0026ldquo;Go Fish\u0026rdquo; in the short-term and the usual Cat-and-Mouse game common to cybersecurity in the long term. Luckily, many organizations misconfigure their WAFs and many imaginative combinations of bypasses can elude defensive expectations, allowing you to fire that harmless and satisfying \u0026ldquo;Alert(1)\u0026rdquo; box, against any firewall (well, hopefully).","date":"2022-07-14T00:00:00Z","permalink":"http://anti-sec.vercel.app/blog/non-discriminatory-waf-torment/","tags":["WAF","Bypass","BugBounty"],"title":"Non-Discriminatory WAF Torment"},{"author":"Jann Moon","categories":null,"contents":"\u003cp\u003eThis is a older-than-brand-new machine from October 2018 that I am resurrecting solely because I rolled the dice and grabbed a random machine from a random page. I know there are other write-ups but I bet none are newer than mine (DISCLAIMER: AT TIME OF WRITING)!\u003c/p\u003e\n\u003cp\u003eCreated by \u003ca href=\"%22https://www.vulnhub.com/author/fred-wemeijer,595/%22\"\u003e‚ÄúFred Wemeijer‚Äù\u003c/a\u003e\r\n, for the FourAndSix series (and no, of course, I have not tried any others.. yet.), the description simply drop ominous and eerie instructions: ‚ÄúTask is to become root and read /root/flag.txt.‚Äù It‚Äôs pretty fucked up, but let‚Äôs fire off some automated tools, fellow skids. ;)\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/426/1.jpg\" alt=\"nmap\"\u003e\nIf you aren‚Äôt starting with nmap are you really starting at all?\nRight away, I started to get pissed because there was no port 80 and I don‚Äôt like surprises. Since SSH is a fairly secure and ancient protocol, trying to break it is akin eat hot garbage at record speed. Hitting rpc and nfs for clues, I dropped some commands and hit some useful nuggets\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erpcclient -U ‚Äú‚Äù -N \u0026lt;IP\u0026gt; \u003cspan style=\"color:#ff79c6\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e showmount -e \u0026lt;IP\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eNFS Export: /home/user/storage \u003cspan style=\"color:#ff79c6\"\u003e[]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eprogram vers proto   port  service\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100000\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e2\u003c/span\u003e   tcp    \u003cspan style=\"color:#bd93f9\"\u003e111\u003c/span\u003e  portmapper\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100000\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e2\u003c/span\u003e   udp    \u003cspan style=\"color:#bd93f9\"\u003e111\u003c/span\u003e  portmapper\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100005\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e1\u003c/span\u003e   udp    \u003cspan style=\"color:#bd93f9\"\u003e709\u003c/span\u003e  mountd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100005\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e3\u003c/span\u003e   udp    \u003cspan style=\"color:#bd93f9\"\u003e709\u003c/span\u003e  mountd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100005\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e1\u003c/span\u003e   tcp    \u003cspan style=\"color:#bd93f9\"\u003e718\u003c/span\u003e  mountd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100005\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e3\u003c/span\u003e   tcp    \u003cspan style=\"color:#bd93f9\"\u003e718\u003c/span\u003e  mountd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100003\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e2\u003c/span\u003e   udp   \u003cspan style=\"color:#bd93f9\"\u003e2049\u003c/span\u003e  nfs\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100003\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e3\u003c/span\u003e   udp   \u003cspan style=\"color:#bd93f9\"\u003e2049\u003c/span\u003e  nfs\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100003\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e2\u003c/span\u003e   tcp   \u003cspan style=\"color:#bd93f9\"\u003e2049\u003c/span\u003e  nfs\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#bd93f9\"\u003e100003\u003c/span\u003e    \u003cspan style=\"color:#bd93f9\"\u003e3\u003c/span\u003e   tcp   \u003cspan style=\"color:#bd93f9\"\u003e2049\u003c/span\u003e  nfs\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eExport list \u003cspan style=\"color:#ff79c6\"\u003efor\u003c/span\u003e 192.168.1.19:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e/home/user/storage \u003cspan style=\"color:#ff79c6\"\u003e(\u003c/span\u003eeveryone\u003cspan style=\"color:#ff79c6\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eSince trying to mount /home and /home/storage gets rejected, you gotta mount the full path that it gives you, bro. You can mkdir a folder as a mount point for the NFS share and explore it as you please. Once in the folder, the only cool part was the backup.7z file. Very unrealistically, it is actually password-protected, unlike 99.9% of backups worldwide. But obviously, because there‚Äôs something wicked important in it.\u003c/p\u003e\n\u003cp\u003eFound this tool, even though I‚Äôm pretty sure that john or hashcat can already do this, but getting a binary unnecessarily is pretty fucking cool so I am gonna go ahead and drop the link to that.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/philsmd/7z2hashcat/releases\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/philsmd/7z2hashcat/releases\u003c/a\u003e\r\n\u003c/p\u003e\n\u003cp\u003eSince I suck and it‚Äôs an .exe, I had to open it in Windows and then send it back again to Kali.\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003e.\\7z2hashcat64‚Äì1.4.exe .\\backup.7z\u003c/code\u003e\u003c/p\u003e\n\u003cp\u003eTake that long ass string of alphanumeric migraine spellcasting and save it to a .txt file for you to crack. Then, crack it with John because like myself, hashcat neglects your graphics card as well and pretends it doesn‚Äôt exist.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ejohn --format\u003cspan style=\"color:#ff79c6\"\u003e=\u003c/span\u003e7z hash.txt\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe password is:: \u0026lt;do it yourself! üòÉ \u0026gt;\u003c/p\u003e\n\u003cp\u003eSo once we open this forsaken file, we get the ssh keys. This would be awesome, except after dropping them into our .ssh folder and renaming \u003ccode\u003eid_rsa\u003c/code\u003e to \u003ccode\u003eauthorized_keys\u003c/code\u003e, this box still has the nerve to request a password from us.\u003c/p\u003e\n\u003cp\u003eI tried to write something in python real quick but it quickly turned into an abortive mess of spaghetti and mutated de-functions so I quickly hit up my good boy, github.com for some help. It came in the form of the first google link I tried and worked wonderfully. Big ups to the guy below who could do what I couldn‚Äôt so elegantly.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/himadriganguly/ssh-password-cracker\" target=\"_blank\" rel=\"noopener\"\u003ehttps://github.com/himadriganguly/ssh-password-cracker\u003c/a\u003e\r\n\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epython sshDictionaryAttack.py \u0026lt;IP_ADDRESS\u0026gt; user /root/wordlists/passwords/weaksauce.txt\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe password for the ssh was: \u0026lt;do it yourself! üòÉ \u0026gt;\u003c/p\u003e\n\u003cp\u003eGreat OSINT skills, the password is only available to eagle eyes like yourself\u003c/p\u003e\n\u003cp\u003eFinally kicking through the front door after beating it down with all them weaksauce passwords\nLike a dummy, it took me a couple mins of trying and failing with wget and curl to move files onto the box, until I realized I can just dump them into that mounted NFS share and get ‚Äôem poppin‚Äô.\u003c/p\u003e\n\u003cp\u003eLinpeas is my GOAT tool, so I always start with that, and if everything goes well, I don‚Äôt need anything more than that, which happened to be the case this time. I really dig how the tool highlights your best chance of attack (with backups) with excellent accuracy.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#ff79c6\"\u003e[\u003c/span\u003e+\u003cspan style=\"color:#ff79c6\"\u003e]\u003c/span\u003e checking /etc/doas.conf\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epermit nopass keepenv user as root cmd /usr/bin/less args /var/log/authlog\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003epermit nopass keepenv root as root\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo break this down, \u003ccode\u003edoas.conf\u003c/code\u003e is a configuration file that allows use to run \u003ccode\u003eless\u003c/code\u003e (a command that reads files bit by bit, like cat but a slow controlled dribble instead of the usual terminal vomit) on \u003ccode\u003e/var/log/authlog\u003c/code\u003e, as the root user. Well, \u003ccode\u003eless\u003c/code\u003e has a function I figured was kinda useless until now, where you can press ‚Äúv‚Äù to bounce over to Vim (time to learn the commands, boy. Just kidding, I always use nano just like \u003cstrong\u003eyou\u003c/strong\u003e unless I‚Äôm forced to use vim). Once in this vim screen, you can type \u003ccode\u003e:sh\u003c/code\u003e to bounce out of vim and into a basic bash shell.\u003c/p\u003e\n\u003cp\u003eAnd the final step, is to move to \u003ccode\u003e/root/\u003c/code\u003eand read the flag.txt.\u003c/p\u003e\n\u003cp\u003eThanks for reading, till next time, skids!\u003c/p\u003e\n\u003ch2 id=\"heading\"\u003e\u003c/h2\u003e","date":"2022-07-13T00:00:00Z","permalink":"http://anti-sec.vercel.app/blog/4two6-writeup/","tags":["CTF","vulnhub"],"title":"FourAndSix2 Writeup"},{"author":"Hugo Authors","categories":null,"contents":"\u003cp\u003eLorem est tota propiore conpellat pectoribus de pectora summo.\u003c/p\u003e","date":"2021-07-13T00:00:00Z","permalink":"http://anti-sec.vercel.app/blog/placeholder-text/","tags":["markdown","text"],"title":"Placeholder Text"},{"author":"Jann Moon","categories":null,"contents":"Unshroad the Cloud - Atmospheric CyberWarfare Against Cloudflare Finding a website\u0026rsquo;s real IP address Finding the IP address of a website can help you in finding vulnerabilities, performing accurate port scans and enumerating your target\u0026rsquo;s surface and other hidden goods obscured and protected by a WAF or remote proxy. In many cases, Cloudflare personifies this barrier to a smooth and simple penetration test, though through my research, I have discovered times where it can be eluded.","date":null,"permalink":"http://anti-sec.vercel.app/blog/unshroud-the-cloud/","tags":null,"title":"Unshroad the Cloud - Atmospheric CyberWarfare Against Cloudflare"}]